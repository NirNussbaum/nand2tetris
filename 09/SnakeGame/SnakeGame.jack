class SnakeGame {
   field int direction; // the square's current direction: 
                        // 0=none, 1=up, 2=down, 3=left, 4=right
   field Snake snakebody;

   /** Constructs a new Snake Game. */
   constructor SnakeGame new() {
      let snakebody = Snake.new(100, 100);
      let direction = 0;  // initial state is no movement
      return this;
   }

   /** Moves the square in the current direction. */
   method void moveSnakebody() {
      if (direction = 1) { do snakebody.moveUp(); }
      if (direction = 2) { do snakebody.moveDown(); }
      if (direction = 3) { do snakebody.moveLeft(); }
      if (direction = 4) { do snakebody.moveRight(); }
      do Sys.wait(5);  // delays the next movement
      return;
   }

   /** Runs the game: handles the user's inputs and moves the square accordingly */
   method void run() {
      var char key;  // the key currently pressed by the user
      var boolean exit;
      let exit = false;
      
      while (~exit) {
         // waits for a key to be pressed
         while (key = 0) {
            let key = Keyboard.keyPressed();
            do moveSnakebody();
         }
         if (key = 81)  { let exit = true; }     // q key
         if (key = 131) { let direction = 1; }   // up arrow
         if (key = 133) { let direction = 2; }   // down arrow
         if (key = 130) { let direction = 3; }   // left arrow
         if (key = 132) { let direction = 4; }   // right arrow

         // waits for the key to be released
         while (~(key = 0)) {
            let key = Keyboard.keyPressed();
            do moveSnakebody();
         }
     } // while
     return;
   }
}
