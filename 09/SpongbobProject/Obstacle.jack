class Obstacle{

    field Array obstacleHeights;
    field int current;
    field int numOfObs;
    field int x;
    field int boardSize;

    /** Constructs a new obtacles with a given location and size. */
    constructor Obstacle new(Array obHeights, int counter, int board_size) {
        var int c;

        let x = 500;
        let current = 0;
        let numOfObs = counter;
        let boardSize = board_size; 

        let obstacleHeights = Array.new(counter);
        let c = 0;
        while(c < counter){
            let obstacleHeights[c] = obHeights[c];
            let c = c + 1;
        }

        return this;
    }

    /** Disposes this obtacle. */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method int get_x(){
        return x;
    }

    //get the head of the current obstacle.
    method int get_y(){
        return 230 - obstacleHeights[current];
    }
    
    /** Draws the obstacle on the screen. and chose a new one if needed */
    method boolean draw(){
        var boolean pass;
        let pass = false;
        do Screen.setColor(true);
        let x = x - 10;
        if(x - 3 < 0){
            let pass = true;
            let x = 500;
            if(current < numOfObs){
                let current = current + 1;
            }
            if(current = numOfObs){
                let current = 0;
            }
        }
        //draw the obstacle.
        do Screen.drawRectangle(x - 3, boardSize - obstacleHeights[current], x, boardSize);
        return pass;
    }
        
    /** erase the obstacle on the screen. */
    method void erase(){
        do Screen.setColor(false);
        do Screen.drawRectangle(x - 3, boardSize - obstacleHeights[current], x, boardSize);
        return;
    }
}